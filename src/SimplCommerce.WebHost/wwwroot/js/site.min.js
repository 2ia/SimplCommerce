/*global jQuery, window*/
(function ($) {
    $(window).load(function () {
        $('.lang-selector li').on('click', function (e) {
            var lang = $(this).find('a').attr('data-value'),
                $langForm = $('#lang-form'),
                $cultureInput = $langForm.find('input[name=culture]');

            if ($cultureInput.val() === lang) {
                e.preventDefault();
                return;
            }
            else {
                $cultureInput.val(lang);
                $langForm.submit();
            }
        });
    });
})(jQuery);
/*global jQuery, window*/
(function ($) {
    $(window).load(function () {
        $('.sp-wrap').smoothproducts();

        $('.product-attrs li').on('click', function () {
            var $variationPrice,
                variationNames = [],
                $form = $(this).closest("form"),
                $attrOptions = $form.find('.product-attr-options');

            $(this).find('input').prop('checked', true);

            $attrOptions.each(function () {
                variationNames.push($(this).find('input[type=radio]:checked').val());
            });

            $variationPrice = $form.find('input[name=' + variationNames.join('-') + 'Price]');
            if ($variationPrice.length > 0) {
                $('.product-price h3').text($variationPrice.val());
                $('.btn-add-cart').prop('disabled', false);
            } else {
                $('.product-price h3').text("Not available");
                $('.btn-add-cart').prop('disabled', true);
            }
        });

        $('.quantity-button').on('click', function () {
            var quantityInput = $('.quantity-field');
            if ($(this).val() === '+')
            {
                quantityInput.val(parseInt(quantityInput.val(), 10) + 1);
            }
            else if (quantityInput.val() > 1) {
                quantityInput.val(quantityInput.val() - 1);
            }
        });
    });
})(jQuery);
/*global jQuery, noUiSlider, wNumb, window, document, productFilter*/
(function ($, currentSearchOption, priceSetting) {
    $(window).load(function () {
        function createUrl() {
            var key,
                value,
                newUrl,
                params = [],
                baseUrl = window.location.protocol + '//' + window.location.host + window.location.pathname;

            for (key in currentSearchOption) {
                if (currentSearchOption.hasOwnProperty(key) && currentSearchOption[key]) {
                    value = currentSearchOption[key];
                    params.push(key + '=' + value);
                }
            }

            if (params.length > 0) {
                newUrl = baseUrl + '?' + params.join('&');
            } else {
                newUrl = baseUrl;
            }

            return newUrl;
        }

        function intPriceSlider() {
            if (!document.getElementById('priceSlider')) {
                return;
            }
            var priceValues = [
                document.getElementById('minPrice'),
                document.getElementById('maxPrice')
            ];

            noUiSlider.create(document.getElementById('priceSlider'), {
                connect: true,
                start: [priceSetting.currentMin, priceSetting.currentMax],
                range: {
                    'min': priceSetting.min,
                    'max': priceSetting.max
                },
                format: wNumb({
                    decimals: 3,
                    thousand: '.'
                })
            });

            document.getElementById('priceSlider').noUiSlider.on('update', function (values, handle) {
                priceValues[handle].innerHTML = values[handle];
            });
        }

        $('#collapse-brand input:checkbox').on('change', function () {
            var index,
                checkbox = $(this),
                brand = checkbox.val(),
                brands = currentSearchOption.brand ? currentSearchOption.brand.split('--') :[];
            if (checkbox.prop("checked") === true) {
                brands.push(brand);
            } else {
                index = brands.indexOf(brand);
                brands.splice(index, 1);
            }
            currentSearchOption.brand = brands.join('--');

            window.location = createUrl();
        });

        $('#apply-price').on('click', function () {
            var min, max, prices;
            prices = document.getElementById('priceSlider').noUiSlider.get();
            min = parseInt(prices[0].replace(/\./g, ''), 10);
            max = parseInt(prices[1].replace(/\./g, ''), 10);
            if (min !== priceSetting.min) {
                currentSearchOption.minPrice = min;
            } else {
                currentSearchOption.minPrice = null;
            }
            if (max !== priceSetting.max) {
                currentSearchOption.maxPrice = max;
            } else {
                currentSearchOption.maxPrice = null;
            }
            window.location = createUrl();
        });

        $('#reset-price').on('click', function () {
            currentSearchOption.minPrice = null;
            currentSearchOption.maxPrice = null;
            window.location = createUrl();
        });

        $('.sort-by select').on('change', function () {
            currentSearchOption.sort = $(this).val();
            window.location = createUrl();
        });

        intPriceSlider();
    });
})(jQuery, productFilter.currentSearchOption, productFilter.priceSetting);
$(function () {
    $('body').on('click', '.btn-add-cart', function () {
        var quantity,
            variationNames = [],
            $form = $(this).closest("form"),
            productId = $(this).closest("form").find('input[name=productId]').val(),
            $quantityInput = $form.find('.quantity-field'),
            $attrOptions = $form.find('.product-attr-options');

        quantity = $quantityInput.length === 1 ? $quantityInput.val() : 1;
        if ($attrOptions.length > 0) {
            $attrOptions.each(function () {
                variationNames.push($(this).find('input[type=radio]:checked').val());
            });
            productId = $form.find('input[name=' + variationNames.join('-') + 'Id]').val();
        }
        
        $.ajax({
            type: 'POST',
            url: '/cart/addtocart',
            data: JSON.stringify({ productId: productId, quantity: quantity }),
            contentType: "application/json"
        }).done(function (data) {
            $('#shopModal').find('.modal-content').html(data);
            $('#shopModal').modal('show');
            $('.cart-badge .badge').text($('#shopModal').find('.cart-item-count').text());
        }).fail(function () {
            $('#shopModal').find('.modal-content').html(`
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Opps</h4>
                </div>
                <div class="modal-body">
                    Please chooose a variation
                </div>`);
            $('#shopModal').modal('show');
        });
    });
});
(function () {
    angular
        .module('hv.shoppingCart', [])
        .controller('shoppingCartListCtrl', [
            '$scope',
            'shoppingCartService',
            function ($scope, shoppingCartService) {
                var vm = this;
                vm.cartViewModel = {};

                function cartDataCallback(result) {
                    vm.cartViewModel = result.data;
                    $('.cart-badge .badge').text(vm.cartViewModel.cartItems.length);
                }

                function getShoppingCartItems() {
                    shoppingCartService.getShoppingCartItems().then(cartDataCallback);
                };

                vm.removeShoppingCartItem = function removeShoppingCartItem(item) {
                    shoppingCartService.removeShoppingCartItem(item.id).then(cartDataCallback);
                }

                vm.increaseQuantity = function increaseQuantity(item) {
                    item.quantity += 1;
                    shoppingCartService.updateQuantity(item.id, item.quantity).then(cartDataCallback);
                }

                vm.decreaseQuantity = function decreaseQuantity(item) {
                    if (item.quantity <= 1) {
                        return;
                    }
                    item.quantity -= 1;
                    shoppingCartService.updateQuantity(item.id, item.quantity).then(cartDataCallback);
                }

                 getShoppingCartItems();
            }
        ]);
})();
(function() {
    angular
        .module('hv.shoppingCart')
        .factory('shoppingCartService', [
            '$http',
            function ($http) {
                function getShoppingCartItems() {
                    return $http.get('Cart/List');
                }
                
                function removeShoppingCartItem(itemId) {
                    return $http.post('Cart/Remove', itemId);
                }

                function updateQuantity(itemId, quantity) {
                    return $http.post('Cart/UpdateQuantity', {
                        cartItemId: itemId,
                        quantity: quantity
                    });
                }

                return {
                    getShoppingCartItems: getShoppingCartItems,
                    removeShoppingCartItem: removeShoppingCartItem,
                    updateQuantity: updateQuantity
                };
            }
        ]);
})();
$(function () {
    function toggleCreateShippingAddress() {
        var shippingAddressId = $('input[name=shippingAddressId]:checked').val(),
            $createShippingAddress = $('.create-shipping-address');

        if (shippingAddressId === "0") {
            $createShippingAddress.show();
        } else {
            $createShippingAddress.hide();
        }
    }

    $('input[name=shippingAddressId]').on('change', function() {
        toggleCreateShippingAddress();
    });

    $('#NewAddressForm_StateOrProvinceId').on('change', function () {
        var selectedStateOrProvinceId = this.value;

        $.getJSON("/Location/GetDistricts/" + selectedStateOrProvinceId, function (data) {
            var $districtSelect = $("#NewAddressForm_DistrictId");
            $districtSelect.empty();

            $.each(data, function (index, option) {
                $districtSelect.append($("<option></option>").attr("value", option.value).text(option.text));
            });
        });
    });

    toggleCreateShippingAddress();
});